name: Construir y Desplegar a AWS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: main

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}

    steps:
      - name: Recuperar el código
        uses: actions/checkout@v3

      - name: Configurar las credenciales AWS
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set aws_session_token "$AWS_SESSION_TOKEN"
          aws configure set region "$AWS_REGION"

      - name: Verificar las credenciales
        run: aws sts get-caller-identity

      - name: Build npm
        run: npm install

      - name: Construir la imagen docker
        run: docker build -t split-wise .

      - name: Iniciar Sesión en ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

      - name: Crear el reposiorio ECR si no existe
        run: |
          aws ecr describe-repositories --repository-names split-wise || aws ecr create-repository --repository-name split-wise

      - name: Push Docker image
        run: |
          docker tag split-wise ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/split-wise
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/split-wise